name: Remote Dispatch Action Responder

# Process is invoked by bee_api and bee-ui repo when 'VERSION' file changes.
# This process updates the appVersion in the respective Chart.yaml file.
# The build process should see the change, and create a new package.

on: [repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --local user.name ${GITHUB_ACTOR}
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        echo ::set-env name=VERSION_CHANGE::0
        echo ::set-env name=API_VERSION::"${{ github.event.client_payload.version }}"

    - name: Get repo and owner
      uses: jungwinter/split@v1
      id: split
      with:
        msg: ${{ github.repository }}
        seperator: "/"

    - name: Event Information
      run: |
        echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
        echo "Version: '${{ env.API_VERSION }}'"

    - name: Update appVersion in charts/bee-api/Chart.yaml
      if: github.event.client_payload.repository == 'BeeRaspberry/bee_api'
      run: |
        ORIG_VERSION=$(grep appVersion charts/bee-api/Chart.yaml)
        sed -i "s/^appVersion: .*/appVersion: ${{ env.API_VERSION }}/" charts/bee-api/Chart.yaml
        NEW_VERSION=$(grep appVersion charts/bee-api/Chart.yaml)

        if [[ "$ORIG_VERSION" != "$NEW_VERSION" ]]; then
          printf "/- name: bee-api/" >sed-command
          printf '!b;n;c\ \ version: "' >>sed-command
          printf "${{ env.API_VERSION }}"\" >>sed-command
          sed -f sed-command Chart.yaml
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --local user.name ${GITHUB_ACTOR}
          git add charts/bee-api/Chart.yaml
          git commit -m "Updated appVersion file - bee-api"
          echo ::set-env name=VERSION_CHANGE::1
        fi

    - name: Update appVersion in charts/bee-ui/Chart.yaml
      if: github.event.client_payload.repository == 'BeeRaspberry/beeweb-ui'
      run: |
        ORIG_VERSION=$(grep appVersion charts/bee-ui/Chart.yaml)
        sed -i "s/^appVersion: .*/appVersion: ${{ env.API_VERSION }}/" charts/bee-ui/Chart.yaml
        NEW_VERSION=$(grep appVersion charts/bee-ui/Chart.yaml)

        if [[ "$ORIG_VERSION" != "$NEW_VERSION" ]]; then
          printf "/- name: bee-ui/" >sed-command
          printf '!b;n;c\ \ version: "' >>sed-command
          printf "${{ env.API_VERSION }}"\" >>sed-command
          sed -f sed-command Chart.yaml
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --local user.name ${GITHUB_ACTOR}
          git add charts/bee-ui/Chart.yaml
          git commit -m "Updated appVersion file - bee-ui"
          echo ::set-env name=VERSION_CHANGE::1
        fi

# Assume since the developer didn't change the version then this is a minor change.
# Increment by one, and set patch to 0.
    - name: Update version and AppVersion of Chart.yaml
      if: env.VERSION_CHANGE == 1
      run: |
          echo "starting logic"
          grep version: Chart.yaml | head -1 | awk -F ': ' '{print $NF}'
          IFS='.'; read -r -a array <<< "$(grep version: Chart.yaml | head -1 | awk -F ': ' '{print $NF}')"
          CNT="${array[1]}"
          ((CNT++))
          echo "made it here"
  #        sed "s/^version: .*/version: ${array[0]}.${CNT}.0/" Chart.yaml
  #        sed -i "s/^version: .*/version: ${array[0]}.${CNT}.0/" Chart.yaml
  #        echo "made it past sed"
  #        IFS='.'; read -r -a array <<< "$(grep appVersion: Chart.yaml | awk -F ': ' '{print $NF}')"
  #        CNT="${array[1]}"
  #        ((CNT++))
  #        sed -i "s/^appVersion: .*/appVersion: ${array[0]}.${CNT}.0/" Chart.yaml
  #        cat Chart.yaml
  #        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
  #        git config --local user.name ${GITHUB_ACTOR}
  #        git add Chart.yaml
  #        git commit -m "Updated main Chart.yml"

 #   - name: Push changes to master
 #     if: env.VERSION_CHANGE == 1
 #     uses: ad-m/github-push-action@master
 #     with:
 #       github_token: ${{ secrets.GITHUB_TOKEN }}
 #       force: true
