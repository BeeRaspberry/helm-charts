apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bee-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bee-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bee-api.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
#      serviceAccountName: {{ include "bee-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    
    {{- if .Values.persistence.enabled }}
      volumes:
        - name: "{{ .Chart.Name }}-volume"
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-claim"
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
    {{- if .Values.persistence.enabled }}          
          volumeMounts:
            - name: "{{ .Chart.Name }}-volume"
              mountPath: "/data"
    {{- end }}
    {{- if eq .Values.database.type "sqlite" }}
          env:
           {{- toYaml . | nindent 12 }}
    {{- else }}
          env:
          - name: DATABASE_TYPE
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: type
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: host
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: databaseName
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: username
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: port
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: password
    {{- end }}      
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}