apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bee-web.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.beeApi.replicaCount }}
  selector:
    matchLabels:
      {{- include "bee-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bee-web.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.beeApi.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bee-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.beeApi.podSecurityContext | nindent 8 }}
      volumes:    
        - name: config-secret-volume
          secret:
            secretName: {{ .Release.Name }}-config-secret
    {{- if eq .Values.beeApi.database.type "sqlite" }}
        - name: "{{ .Chart.Name }}-volume"
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-claim"
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.beeApi.securityContext | nindent 12 }}
          image: "{{ .Values.beeApi.image.repository }}:{{ .Values.beeApi.image.version }}"
          imagePullPolicy: {{ .Values.beeApi.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: config-secret-volume
              mountPath: /etc/secret-volume
              readOnly: true
    {{- if eq .Values.beeApi.database.type "sqlite" }}
            - name: "{{ .Chart.Name }}-volume"
              mountPath: "/data"
    {{- end }}
          env:
          - name: CONFIG_FILE
            value: /etc/secret-volume/config.cfg
    {{- if eq .Values.beeApi.database.type "sqlite" }}
           {{- toYaml . | nindent 12 }}
    {{- else }}
          - name: DATABASE_TYPE
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: type
    {{- if .Values.beeApi.database.host }}
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: host
    {{- end }}
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: databaseName
    {{- if .Values.beeApi.database.username }}
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: username
    {{- end }}
    {{- if .Values.beeApi.database.port }}
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: port
    {{- end }}
    {{- if .Values.beeApi.database.password }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-secret
                key: password
    {{- end }}      
    {{- end }}      
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
          resources:
            {{- toYaml .Values.beeApi.resources | nindent 12 }}
      {{- with .Values.beeApi.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.beeApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.beeApi.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}